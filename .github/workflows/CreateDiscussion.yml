name: Create Discussion on New Issue

on:
  issues:
    types: [opened]

jobs:
  create_discussion:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Adjust as needed

      - name: Install dependencies
        run: pip install requests

      - name: Run inline Python code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_ID: ${{ steps.get-repo-id.outputs.repo-id }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          CATEGORY_ID: DIC_kwDOK8PX484Cgdqa
          VERCEL_REDEPLOY_HOOK: ${{ secrets.VERCEL_REDEPLOY_HOOK }}
        run: |
          python - <<EOF
          import os
          import requests
          import json

          def update():
              GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
              repository_id = os.getenv('REPOSITORY_ID')
              category_id = os.getenv('CATEGORY_ID')
              issue_title = os.getenv('ISSUE_TITLE')
              VERCEL_REDEPLOY_HOOK = os.getenv('VERCEL_REDEPLOY_HOOK')

              if not GITHUB_TOKEN or not repository_id or not issue_title or not VERCEL_REDEPLOY_HOOK:
                  raise ValueError('Missing environment variables. Ensure GITHUB_TOKEN, REPOSITORY_ID, ISSUE_TITLE, and VERCEL_REDEPLOY_HOOK are set.')

              mutation = f'''
                  mutation {{
                      createDiscussion(input: {{
                          repositoryId: "{repository_id}",
                          categoryId: "{category_id}",
                          body: "Discussion created based on issue: \\"{issue_title}\\"",
                          title: "{issue_title}"
                      }}) {{
                          discussion {{
                              id
                          }}
                      }}
                  }}
              '''

              graphql_url = 'https://api.github.com/graphql'

              try:
                  response = requests.post(graphql_url, headers={
                      'Authorization': f'Bearer {GITHUB_TOKEN}',
                      'Content-Type': 'application/json',
                      'Accept': 'application/vnd.github.v3+json'
                  }, data=json.dumps({'query': mutation}))

                  data = response.json()
                  print('Discussion creation response:', data)

                  vercel_response = requests.post(VERCEL_REDEPLOY_HOOK)
                  vercel_data = vercel_response.json()
                  print('Vercel redeploy hook response:', vercel_data)

              except Exception as error:
                  print('Error creating discussion or revalidating:', error)

          update()
          EOF
