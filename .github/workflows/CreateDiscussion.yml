name: Create Discussion for Blog Issues

on:
  issues:
    types: [opened]
    tags:
      - blog

jobs:
  create-discussion:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install graphql request@^2.88.2

      - name: Print ISSUE_TITLE
        run: |
          ISSUE_TITLE=$(jq -r '.issue.title' $GITHUB_EVENT_PATH)
          echo "Issue Title: $ISSUE_TITLE"

      - name: Create Discussion
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_TITLE=$(jq -r '.issue.title' $GITHUB_EVENT_PATH)
          REPOSITORY_ID="R_kgDOK8PX4w"
          CATEGORY_ID="DIC_kwDOK8PX484Cgdqa"
          
          # Construct GraphQL mutation with correct quotes
          mutation='mutation {
            createDiscussion(input: {
              repositoryId: "'$REPOSITORY_ID'",
              categoryId: "'$CATEGORY_ID'",
              body: "Discussion created based on issue: \\"'$ISSUE_TITLE'\\"",
              title: "'$ISSUE_TITLE'"
            }) {
              discussion {
                id
              }
            }
          }'
          
          # Print GraphQL request body for debugging
          echo "GraphQL Request Body:"
          echo "$mutation"
          
          # Send GraphQL request using curl
          response=$(curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"query\": \"$mutation\"}" \
            https://api.github.com/graphql)
          
          # Print response for debugging
          echo "Discussion creation response:"
          echo "$response"
